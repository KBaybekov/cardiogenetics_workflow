trim_galore: '{binaries["trim_galore"]} --length 35 --output_dir {folders["tmp_dir"]} --cores {args["threads"]} --paired {" ".join(raw_fastqs)}'

trimmomatic: 'java -jar {binaries["trimmomatic"]} PE -threads {args["threads"]} {" ".join(trim_galore_fastqs)} -baseout {folders["tmp_dir"]}{filenames["basename"]}P.fq SLIDINGWINDOW:4:20 HEADCROP:15 MINLEN:35'

fastqc: '{binaries["fastqc"]} --quiet --threads 2 -o {folders["qc_dir"]} {folders["tmp_dir"]}{filenames["basename"]}*P.fq'

aligning: 'bwa mem -t {args["threads"]} -M {args["ref"]} {trimmomatic_fastqs} | {binaries["samblaster"]} -M -e -r -q --addMateTags | {binaries["samtools"]} view -@ {args["threads"]} -Sb - > {folders["tmp_dir"]}primary.bam'

samtools_sort: '{binaries["samtools"]} sort -@ {args["threads"]} {folders["tmp_dir"]}primary.bam > {folders["tmp_dir"]}sorted.bam'

samtools_index: '{binaries["samtools"]} index {folders["tmp_dir"]}sorted.bam'

abra2_localization  # deprecated

abra2: 'java {binaries["abra2"]} --log error --in {folders["tmp_dir"]}sorted.bam --out {folders["bam_dir"]}{filenames["basename"]}_abra2.bam --ref {args["ref"]} --threads {args["threads"]} --tmpdir {folders["tmp_dir"]}'

samtools_index_abra: '{binaries["samtools"]} index {folders["bam_dir"]}{filenames["basename"]}_abra2.bam'

freebayes: '{binaries["freebayes"]} -f {args["ref"]} --standard-filters --report-genotype-likelihood-max --min-coverage 10 --min-alternate-qsum 50 --min-alternate-count 5 --min-alternate-fraction 0.2 {folders["bam_dir"]}{filenames["basename"]}_abra2.bam > {folders["vcf_dir"]}{filenames["basename"]}_freebayes.vcf'

deepvariant: 'sudo docker run -v {folders["bam_dir"]}:/input -v {folders["vcf_dir"]}:/output -v {os.path.dirname(args["ref"])}:/ref/ -v {folders["tmp_dir"]}:/tmp/ google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type={args["seq_mode"]} --ref=/ref/{os.path.basename(args["ref"])} --reads=/input/{abra_bam.split("/")[-1]} --output_vcf=/output/{filenames["basename"]}_deepvariant.vcf.gz --output_gvcf=/output/{filenames["basename"]}_deepvariant.gvcf --intermediate_results_dir /tmp/intermediate_results_dir --num_shards={args["threads"]}'

annovar_freebayes: '{annovar_dir}table_annovar.pl -thread {args["threads"]} -vcfinput {folders["vcf_dir"]}{filenames["basename"]}_freebayes.vcf {folders["annovar_dir"]}humandb/ -buildver hg38 -out {folders["annotation_dir"]}{filenames["basename"]}_freebayes -protocol gnomad41_exome,gnomad41_genome -operation f,f -nastring . -polish'

cravat_freebayes: '{binaries["cravat"]} run {folders["annotation_dir"]}{filenames["basename"]}_freebayes.hg38_multianno.vcf -l hg38 -t excel -a {args["cravat_annotators"]} -d {folders["annotation_dir"]} --mp {args["threads"]} -n {filenames["basename"]}_cravat_freebayes'

annovar_deepvariant: '{annovar_dir}table_annovar.pl -thread {args["threads"]} -vcfinput {folders["vcf_dir"]}{filenames["basename"]}_deepvariant.vcf {folders["annovar_dir"]}humandb/ -buildver hg38 -out {folders["annotation_dir"]}{filenames["basename"]}_deepvariant -protocol gnomad41_exome,gnomad41_genome -operation f,f -nastring . -polish'

cravat_deepvariant: '{binaries["cravat"]} run {folders["annotation_dir"]}{filenames["basename"]}_deepvariant.hg38_multianno.vcf -l hg38 -t excel -a {args["cravat_annotators"]} -d {folders["annotation_dir"]} --mp {args["threads"]} -n {filenames["basename"]}_cravat_deepvariant'

remove_tmp_files: 'rm {folders["tmp_dir"]}{filenames["basename"]}*'