trim_galore:
  {programms["trim_galore"]} --length 35 --output_dir {folders["tmp_dir"]} --cores {args["threads"]} --paired {" ".join(filenames["raw_fastqs"])}
trimmomatic:
  java -jar {programms["trimmomatic"]} PE -threads {args["threads"]} {" ".join(filenames["trim_galore_fastqs"])} -baseout {folders["tmp_dir"]}{filenames["basename"]}.fq SLIDINGWINDOW:4:20 HEADCROP:10 MINLEN:35
fastqc:
  {programms["fastqc"]} --quiet --threads 2 -o {folders["qc_dir"]} {folders["tmp_dir"]}{filenames["basename"]}*P.fq
aligning:
  bwa mem -t {args["threads"]} -M {args["ref"]} {filenames["trimmomatic_fastqs"]} | {programms["samblaster"]} -M -e -r -q --addMateTags | {programms["samtools"]} view -@ {args["threads"]} -Sb - > {filenames["in_bam"]}
samtools_sort:
  {programms["samtools"]} sort -@ {args["threads"]} {filenames["in_bam"]} > {filenames["sorted_bam"]}
samtools_index:
  {programms["samtools"]} index -@ {args["threads"]} {filenames["sorted_bam"]}
abra2:
  java {programms["abra2"]} --log error --in {filenames["sorted_bam"]} --out {filenames["abra_bam"]} --ref {args["ref"]} --threads {args["threads"]} --tmpdir {folders["tmp_dir"]}
samtools_index_abra:
  {programms["samtools"]} index -@ {args["threads"]} {filenames["abra_bam"]}
freebayes:
  {programms["freebayes"]} -f {args["ref"]} --standard-filters --report-genotype-likelihood-max --min-coverage 8 --min-alternate-qsum 40 --min-alternate-count 2 --min-alternate-fraction 0.1 {filenames["abra_bam"]} > {filenames["tmp_vcf_freebayes"]}
deepvariant:
  sudo docker run -v {folders["bam_dir"]}:/input -v {folders["vcf_dir"]}:/output -v {os.path.dirname(args["ref"])}:/ref/ -v {folders["tmp_dir"]}:/tmp/ google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type={args["seq_mode"]} --ref=/ref/{os.path.basename(args["ref"])} --reads=/input/{os.path.basename(filenames["abra_bam"])} --output_vcf=/tmp/{os.path.basename(filenames["tmp_vcf_deepvariant"])} --output_gvcf=/output/{os.path.basename(filenames["gvcf_deepvariant"])} --intermediate_results_dir /tmp/intermediate_results_dir --num_shards={args["threads"]}
fb_vcf_filtering:
  bcftools filter --include "QUAL>20 && DP>18 && ((FORMAT/AD[0:1] / FORMAT/AD[0:0] > 0.2) || (FORMAT/AD[0:0] == 0 && FORMAT/AD[0:1] >= 5))" --threads {args["threads"]} {filenames["tmp_vcf_freebayes"]} > {filenames["vcf_freebayes"]}
fb_bgzip:
  bgzip -@ {args["threads"]} {filenames["vcf_freebayes"]} && tabix -p vcf {filenames["vcf_freebayes"]}.gz
dv_vcf_filtering:
  bcftools filter --include "QUAL>20 && DP>18 && ((FORMAT/AD[0:1] / FORMAT/AD[0:0] > 0.2) || (FORMAT/AD[0:0] == 0 && FORMAT/AD[0:1] >= 5))" --threads {args["threads"]} {filenames["tmp_vcf_deepvariant"]} > {filenames["vcf_deepvariant"]}
dv_bgzip:
  bgzip -@ {args["threads"]} {filenames["vcf_deepvariant"]} && tabix -p vcf {filenames["vcf_deepvariant"]}.gz
vcf_intersection:
  bcftools isec  -p {folders["tmp_dir"]}isec/ {filenames["vcf_deepvariant"]}.gz {filenames["vcf_freebayes"]}.gz
merged_vcf_actions:
  bgzip -@ {args["threads"]} {folders["tmp_dir"]}isec/0003.vcf && tabix -p vcf {folders["tmp_dir"]}isec/0003.vcf.gz && mv {folders["tmp_dir"]}isec/0003.vcf.gz {filenames["merged_vcf"]} 
annovar_freebayes:
  {annovar_dir}table_annovar.pl -thread {args["threads"]} -vcfinput {folders["vcf_dir"]}{filenames["basename"]}_freebayes.vcf {folders["annovar_dir"]}humandb/ -buildver hg38 -out {folders["annotation_dir"]}{filenames["basename"]}_freebayes -protocol gnomad41_exome,gnomad41_genome -operation f,f -nastring . -polish
cravat_freebayes:
  {programms["cravat"]} run {folders["annotation_dir"]}{filenames["basename"]}_freebayes.hg38_multianno.vcf -l hg38 -t excel -a {args["cravat_annotators"]} -d {folders["annotation_dir"]} --mp {args["threads"]} -n {filenames["basename"]}_cravat_freebayes
annovar_deepvariant:
  {annovar_dir}table_annovar.pl -thread {args["threads"]} -vcfinput {folders["vcf_dir"]}{filenames["basename"]}_deepvariant.vcf {folders["annovar_dir"]}humandb/ -buildver hg38 -out {folders["annotation_dir"]}{filenames["basename"]}_deepvariant -protocol gnomad41_exome,gnomad41_genome -operation f,f -nastring . -polish
cravat_deepvariant:
  {programms["cravat"]} run {folders["annotation_dir"]}{filenames["basename"]}_deepvariant.hg38_multianno.vcf -l hg38 -t excel -a {args["cravat_annotators"]} -d {folders["annotation_dir"]} --mp {args["threads"]} -n {filenames["basename"]}_cravat_deepvariant
remove_tmp_files:
  rm -rf {folders["tmp_dir"]}{filenames["basename"]}*